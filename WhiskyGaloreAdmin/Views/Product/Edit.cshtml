@model WhiskyGaloreAdmin.Models.Product
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Product";
}

<script src="@Url.Content("~/Scripts/readonly.js")" type="text/javascript"></script>


<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Edit a product</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post))
{
    <!-- /.row -->
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Product details
                </div>
                <div class="panel-body">
                    <div class="row">
                        @Html.AntiForgeryToken()
                        <div class="col-lg-6">
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => Model.productId)
                            <div class="form-group">
                                @Html.LabelFor(model => model.cat, new { @class = "control-label col-lg-4" })
                                @Html.DropDownListFor(model => model.SelectedCat,
                                                      new SelectList(Model.cat, "Key", "Value"))
                                @Html.ValidationMessageFor(model => model.SelectedCat, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.productName, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.productName)
                                @Html.ValidationMessageFor(model => model.productName, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.productDesc, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.productDesc)
                                @Html.ValidationMessageFor(model => model.productDesc, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.barcode, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.barcode)
                                @Html.ValidationMessageFor(model => model.barcode, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.unitPrice, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.unitPrice)
                                @Html.ValidationMessageFor(model => model.unitPrice, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.mrrp, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.mrrp)
                                @Html.ValidationMessageFor(model => model.mrrp, String.Empty, new { @style = "color:red;!important" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.unitsInStock, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.unitsInStock)
                                @Html.ValidationMessageFor(model => model.unitsInStock, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.unitWeight, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.unitWeight)
                                @Html.ValidationMessageFor(model => model.unitWeight, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.qPerUnit, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.qPerUnit)
                                @Html.ValidationMessageFor(model => model.qPerUnit, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.picUrl, new { @class = "control-label col-lg-4" })
                                @Html.EditorFor(model => model.picUrl)
                                @Html.ValidationMessageFor(model => model.picUrl, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.featured, new { @class = "control-label col-lg-4" })
                                @Html.EnumDropDownListFor(model => model.featured)
                                @Html.ValidationMessageFor(model => model.featured, String.Empty, new { @style = "color:red;!important" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.staffPick, new { @class = "control-label col-lg-4" })
                                @Html.EnumDropDownListFor(model => model.staffPick)
                                @Html.ValidationMessageFor(model => model.staffPick, String.Empty, new { @style = "color:red;!important" })
                            </div>
                        </div>
                    </div>
                    <div id="btn" class="col-lg-6">
                        <button type="submit" class="btn btn-default" value="Update" name="command">Update</button>
                        <button type="submit" class="btn btn-default" value="Delete" name="command" onclick="return confirmation();">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
}

<div>
    @Html.ActionLink("Back to List", "Details")
</div>


